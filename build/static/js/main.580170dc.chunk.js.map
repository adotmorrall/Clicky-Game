{"version":3,"sources":["components/NavbarMsg/index.js","components/Navbar/index.js","components/Header/index.js","components/Container/index.js","components/ClickItem/index.js","components/Game/index.js","App.js","index.js"],"names":["NavbarMsg","state","message","animating","renderMessage","prevState","score","topScore","newState","this","props","setState","className","onAnimationEnd","Component","Navbar","href","Header","Container","children","ClickItem","role","aria-label","onClick","handleClick","id","style","backgroundImage","image","shake","Game","data","handleCorrectGuess","newData","newScore","newTopScore","Math","max","shuffleData","handleIncorrectGuess","resetData","map","item","clicked","i","length","j","floor","random","temp","handleItemClick","guessedCorrectly","newItem","key","App","ReactDOM","render","document","getElementById"],"mappings":"mlCAgDeA,G,iNA5CXC,MAAQ,CACJC,QAAS,GACTC,WAAW,G,EAmBfC,cAAgB,WACZ,OAAQ,EAAKH,MAAMC,SACf,IAAK,UACD,MAAO,WACX,IAAK,YACD,MAAO,oBACX,QACI,MAAO,qC,oFAvBqBG,GAAY,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAClBC,EAAW,CAAEL,WAAW,GAG1BK,EAASN,QADC,IAAVI,GAA4B,IAAbC,EACI,GACF,IAAVD,GAAeC,EAAW,EACd,YAEA,UAGnBD,IAAUG,KAAKC,MAAMJ,OAASG,KAAKR,MAAMC,UAAYM,EAASN,SAC9DO,KAAKE,SAASH,K,+BAeZ,IAAD,OACL,OACI,wBACII,UAAWH,KAAKR,MAAME,UAAYM,KAAKR,MAAMC,QAAU,GACvDW,eAAgB,kBAAM,EAAKF,SAAS,CAAER,WAAW,MAEhDM,KAAKL,qB,GAvCEU,c,MCiBTC,MAhBf,SAAgBL,GACZ,OACI,yBAAKE,UAAU,UACX,4BACI,wBAAIA,UAAU,SACV,uBAAGI,KAAK,KAAR,gBAEJ,kBAAC,EAAD,CAAWV,MAAOI,EAAMJ,MAAOC,SAAUG,EAAMH,WAC/C,sCACYG,EAAMJ,MADlB,iBACuCI,EAAMH,a,MCD9CU,MATf,WACI,OACI,4BAAQL,UAAU,UACd,4CACA,wH,MCAGM,MAJf,SAAmBR,GACf,OAAO,0BAAME,UAAU,aAAaF,EAAMS,W,MCW/BC,MAZf,SAAmBV,GACf,OACI,yBACIW,KAAK,MACLC,aAAW,aACXC,QAAS,kBAAMb,EAAMc,YAAYd,EAAMe,KACvCC,MAAO,CAAEC,gBAAgB,QAAD,OAAUjB,EAAMkB,MAAhB,OACxBhB,UAAS,oBAAeF,EAAMmB,MAAQ,SAAW,O,OCkF9CC,E,2MApFX7B,MAAQ,CACJ8B,OACAzB,MAAO,EACPC,SAAU,G,EAOdyB,mBAAqB,SAAAC,GAAY,IAAD,EACA,EAAKhC,MAAzBM,EADoB,EACpBA,SACF2B,EAFsB,EACV5B,MACO,EACnB6B,EAAcC,KAAKC,IAAIH,EAAU3B,GAEvC,EAAKI,SAAS,CACVoB,KAAM,EAAKO,YAAYL,GACvB3B,MAAO4B,EACP3B,SAAU4B,K,EAIlBI,qBAAuB,SAAAR,GACnB,EAAKpB,SAAS,CACVoB,KAAM,EAAKS,UAAUT,GACrBzB,MAAO,K,EAIfkC,UAAY,SAAAT,GACR,IAAMS,EAAYT,EAAKU,KAAI,SAAAC,GAAI,sBAAUA,EAAV,CAAgBC,SAAS,OACxD,OAAO,EAAKL,YAAYE,I,EAG5BF,YAAc,SAAAP,GAEV,IADA,IAAIa,EAAIb,EAAKc,OAAS,EACfD,EAAI,GAAG,CACV,IAAME,EAAIV,KAAKW,MAAMX,KAAKY,UAAYJ,EAAI,IACpCK,EAAOlB,EAAKa,GAClBb,EAAKa,GAAKb,EAAKe,GACff,EAAKe,GAAKG,EACVL,IAEJ,OAAOb,G,EAGXmB,gBAAkB,SAAAzB,GACd,IAAI0B,GAAmB,EACjBlB,EAAU,EAAKhC,MAAM8B,KAAKU,KAAI,SAAAC,GAChC,IAAMU,EAAO,eAAQV,GAOrB,OANIU,EAAQ3B,KAAOA,IACV2B,EAAQT,UACTS,EAAQT,SAAU,EAClBQ,GAAmB,IAGpBC,KAEXD,EACM,EAAKnB,mBAAmBC,GACxB,EAAKM,qBAAqBN,I,mFArDhCxB,KAAKE,SAAS,CAAEoB,KAAMtB,KAAK6B,YAAY7B,KAAKR,MAAM8B,U,+BAwD5C,IAAD,OACL,OACI,6BACI,kBAAC,EAAD,CAAKzB,MAAOG,KAAKR,MAAMK,MAAOC,SAAUE,KAAKR,MAAMM,WACnD,kBAAC,EAAD,MACA,kBAAC,EAAD,KACKE,KAAKR,MAAM8B,KAAKU,KAAI,SAAAC,GAAI,OACrB,kBAAC,EAAD,CACIW,IAAKX,EAAKjB,GACVA,GAAIiB,EAAKjB,GACTI,OAAQ,EAAK5B,MAAMK,OAAS,EAAKL,MAAMM,SACvCiB,YAAa,EAAK0B,gBAClBtB,MAAOc,EAAKd,iB,GA5ErBd,aCAJwC,MAJf,WACE,OAAO,kBAAC,EAAD,O,MCCTC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.580170dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nclass NavbarMsg extends Component {\r\n    state = {\r\n        message: \"\",\r\n        animating: false\r\n    };\r\n\r\n    componentDidUpdate({ score, topScore }, prevState) {\r\n        const newState = { animating: true };\r\n\r\n        if (score === 0 && topScore === 0) {\r\n            newState.message = '';\r\n        } else if (score === 0 && topScore > 0) {\r\n            newState.message = 'incorrect';\r\n        } else {\r\n            newState.message = 'correct';\r\n        }\r\n\r\n        if (score !== this.props.score || this.state.message !== newState.message) {\r\n            this.setState(newState);\r\n        }\r\n    }\r\n\r\n    renderMessage = () => {\r\n        switch (this.state.message) {\r\n            case 'correct':\r\n                return 'Correct!';\r\n            case 'incorrect':\r\n                return \"Wrong, try again!\";\r\n            default:\r\n                return 'Click a Simpsons image to begin!';\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li\r\n                className={this.state.animating ? this.state.message : ''}\r\n                onAnimationEnd={() => this.setState({ animating: false })}\r\n            >\r\n                {this.renderMessage()}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarMsg;\r\n","import React from 'react';\r\nimport NavbarMsg from '../NavbarMsg';\r\nimport './style.css';\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className='navbar'>\r\n            <ul>\r\n                <li className='brand'>\r\n                    <a href='/'>Clicky Game</a>\r\n                </li>\r\n                <NavbarMsg score={props.score} topScore={props.topScore} />\r\n                <li>\r\n                    Score: {props.score} | Top Score: {props.topScore}\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className='header'>\r\n            <h1>Clicky Game!</h1>\r\n            <h1>Click an image to score points, but try not to click on the same image more than once!</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction Container(props) {\r\n    return <main className='container'>{props.children}</main>\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction ClickItem(props) {\r\n    return (\r\n        <div\r\n            role='img'\r\n            aria-label='click item'\r\n            onClick={() => props.handleClick(props.id)}\r\n            style={{ backgroundImage: `url('${props.image}')` }}\r\n            className={`click-item${props.shake ? ' shake' : ''}`}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ClickItem;","import React, { Component } from \"react\";\r\nimport Nav from \"../Navbar\";\r\nimport Header from \"../Header\";\r\nimport Container from \"../Container\";\r\nimport ClickItem from \"../ClickItem\";\r\nimport data from \"../../images.json\";\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        data,\r\n        score: 0,\r\n        topScore: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ data: this.shuffleData(this.state.data) });\r\n    }\r\n\r\n    handleCorrectGuess = newData => {\r\n        const { topScore, score } = this.state;\r\n        const newScore = score + 1;\r\n        const newTopScore = Math.max(newScore, topScore);\r\n\r\n        this.setState({\r\n            data: this.shuffleData(newData),\r\n            score: newScore,\r\n            topScore: newTopScore\r\n        });\r\n    };\r\n\r\n    handleIncorrectGuess = data => {\r\n        this.setState({\r\n            data: this.resetData(data),\r\n            score: 0\r\n        });\r\n    };\r\n\r\n    resetData = data => {\r\n        const resetData = data.map(item => ({ ...item, clicked: false }));\r\n        return this.shuffleData(resetData);\r\n    };\r\n\r\n    shuffleData = data => {\r\n        let i = data.length - 1;\r\n        while (i > 0) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            const temp = data[i];\r\n            data[i] = data[j];\r\n            data[j] = temp;\r\n            i--;\r\n        }\r\n        return data;\r\n    };\r\n\r\n    handleItemClick = id => {\r\n        let guessedCorrectly = false;\r\n        const newData = this.state.data.map(item => {\r\n            const newItem = { ...item };\r\n            if (newItem.id === id) {\r\n                if (!newItem.clicked) {\r\n                    newItem.clicked = true;\r\n                    guessedCorrectly = true;\r\n                }\r\n            }\r\n            return newItem;\r\n        });\r\n        guessedCorrectly\r\n            ? this.handleCorrectGuess(newData)\r\n            : this.handleIncorrectGuess(newData);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Nav score={this.state.score} topScore={this.state.topScore} />\r\n                <Header />\r\n                <Container>\r\n                    {this.state.data.map(item => (\r\n                        <ClickItem\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            shake={!this.state.score && this.state.topScore}\r\n                            handleClick={this.handleItemClick}\r\n                            image={item.image}\r\n                        />\r\n                    ))}\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\nimport Game from './components/Game';\n\nfunction App() {\n  return <Game />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}